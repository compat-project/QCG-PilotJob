Version 0.9   2020-09-21 Piotr Kopta <pkopta@man.poznan.pl>
	* new execution models 'intelmpi', 'srunmpi', 'openmpi'
	* initial support for hyper-threading nodes
	* bugfix related to parsing slurm node list
	* bugfix related to stalling while launching mpi applications

Version 0.8   2020-06-10 Piotr Kopta <pkopta@man.poznan.pl>
	* documentation in rst format
	* documentation available in readthedocs.io
	* python modules available in pypi
	* code cleanup (pep & pylint)
	* code documentation
	* changed module name qcg.appscheduler -> qcg.pilotjob
	* changed package name QCG-PilotManager -> qcg-pilotjob
	* initial support for partitioning resources by many instances
	* changed handling of iteration jobs
	* changed element 'iterate' (list) -> 'iteration' (dict) in job
	description
	* job names cannot contain variables
	* job's iterations with automatically assigned names
	* changed names in API (lowercase)

Version 0.7   2020-03-11 Piotr Kopta <pkopta@man.poznan.pl>
	* bugfix related to 'step creation temporarily disabled' 
	* bugfix extended node launcher agent wait time

Version 0.6   2019-12-12 Piotr Kopta <pkopta@man.poznan.pl>
	* support for including Python virtual environments in tasks
	* support for loading environment modules in tasks

Version 0.4   2019-06-10 Bartosz Bosak <bbosak@man.poznan.pl>
	* new LocalManager class, which allows to start QCG Pilot Job Manager
	directly from a python code
	* the testing mode of execution which allows to define virtual
	resources and may be useful e.g. for tests performed on users'
	laptops.


Version 0.2   2018-03-14 Piotr Kopta <pkopta@man.poznan.pl>
	* new variable in job's execution environemnt QCG_PM_ZMQ_ADDRESS with
	address of QCG PJM ZMQ interface
	* changed response format of 'submit' method - besides the number of
	submited jobs, there is also a list with the submitted job names returned
	* changed arguments of 'jobStatus' method - instead of a single job name,
	now the list of job names is expected
	* changed response format of 'jobStatus' method - instead of a single job
	name and status, now the list of job names with their status is returned
	as a dictionary - under the key 'jobs'
	* changed arguments of 'jobRemove' method - instead of a single job name,
	now the list of job names is expected
	* new interface method 'jobInfo' - method returns a detailed information
	about given jobs
	* now 'resources' attribute of job description in a 'submit' method is
	optionaly - if not defined the single core will be taken as a default
	value
